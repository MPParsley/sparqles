/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sparqles.avro.discovery;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class QueryInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"QueryInfo\",\"namespace\":\"sparqles.avro.discovery\",\"fields\":[{\"name\":\"URL\",\"type\":\"string\"},{\"name\":\"Exception\",\"type\":[\"string\",\"null\"]},{\"name\":\"Results\",\"type\":\"string\"},{\"name\":\"descriptionFiles\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence URL;
  @Deprecated public java.lang.CharSequence Exception;
  @Deprecated public java.lang.CharSequence Results;
  @Deprecated public java.util.List<java.lang.CharSequence> descriptionFiles;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public QueryInfo() {}

  /**
   * All-args constructor.
   */
  public QueryInfo(java.lang.CharSequence URL, java.lang.CharSequence Exception, java.lang.CharSequence Results, java.util.List<java.lang.CharSequence> descriptionFiles) {
    this.URL = URL;
    this.Exception = Exception;
    this.Results = Results;
    this.descriptionFiles = descriptionFiles;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return URL;
    case 1: return Exception;
    case 2: return Results;
    case 3: return descriptionFiles;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: URL = (java.lang.CharSequence)value$; break;
    case 1: Exception = (java.lang.CharSequence)value$; break;
    case 2: Results = (java.lang.CharSequence)value$; break;
    case 3: descriptionFiles = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'URL' field.
   */
  public java.lang.CharSequence getURL() {
    return URL;
  }

  /**
   * Sets the value of the 'URL' field.
   * @param value the value to set.
   */
  public void setURL(java.lang.CharSequence value) {
    this.URL = value;
  }

  /**
   * Gets the value of the 'Exception' field.
   */
  public java.lang.CharSequence getException() {
    return Exception;
  }

  /**
   * Sets the value of the 'Exception' field.
   * @param value the value to set.
   */
  public void setException(java.lang.CharSequence value) {
    this.Exception = value;
  }

  /**
   * Gets the value of the 'Results' field.
   */
  public java.lang.CharSequence getResults() {
    return Results;
  }

  /**
   * Sets the value of the 'Results' field.
   * @param value the value to set.
   */
  public void setResults(java.lang.CharSequence value) {
    this.Results = value;
  }

  /**
   * Gets the value of the 'descriptionFiles' field.
   */
  public java.util.List<java.lang.CharSequence> getDescriptionFiles() {
    return descriptionFiles;
  }

  /**
   * Sets the value of the 'descriptionFiles' field.
   * @param value the value to set.
   */
  public void setDescriptionFiles(java.util.List<java.lang.CharSequence> value) {
    this.descriptionFiles = value;
  }

  /** Creates a new QueryInfo RecordBuilder */
  public static sparqles.avro.discovery.QueryInfo.Builder newBuilder() {
    return new sparqles.avro.discovery.QueryInfo.Builder();
  }
  
  /** Creates a new QueryInfo RecordBuilder by copying an existing Builder */
  public static sparqles.avro.discovery.QueryInfo.Builder newBuilder(sparqles.avro.discovery.QueryInfo.Builder other) {
    return new sparqles.avro.discovery.QueryInfo.Builder(other);
  }
  
  /** Creates a new QueryInfo RecordBuilder by copying an existing QueryInfo instance */
  public static sparqles.avro.discovery.QueryInfo.Builder newBuilder(sparqles.avro.discovery.QueryInfo other) {
    return new sparqles.avro.discovery.QueryInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for QueryInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<QueryInfo>
    implements org.apache.avro.data.RecordBuilder<QueryInfo> {

    private java.lang.CharSequence URL;
    private java.lang.CharSequence Exception;
    private java.lang.CharSequence Results;
    private java.util.List<java.lang.CharSequence> descriptionFiles;

    /** Creates a new Builder */
    private Builder() {
      super(sparqles.avro.discovery.QueryInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sparqles.avro.discovery.QueryInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.URL)) {
        this.URL = data().deepCopy(fields()[0].schema(), other.URL);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Exception)) {
        this.Exception = data().deepCopy(fields()[1].schema(), other.Exception);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Results)) {
        this.Results = data().deepCopy(fields()[2].schema(), other.Results);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.descriptionFiles)) {
        this.descriptionFiles = data().deepCopy(fields()[3].schema(), other.descriptionFiles);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing QueryInfo instance */
    private Builder(sparqles.avro.discovery.QueryInfo other) {
            super(sparqles.avro.discovery.QueryInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.URL)) {
        this.URL = data().deepCopy(fields()[0].schema(), other.URL);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Exception)) {
        this.Exception = data().deepCopy(fields()[1].schema(), other.Exception);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Results)) {
        this.Results = data().deepCopy(fields()[2].schema(), other.Results);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.descriptionFiles)) {
        this.descriptionFiles = data().deepCopy(fields()[3].schema(), other.descriptionFiles);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'URL' field */
    public java.lang.CharSequence getURL() {
      return URL;
    }
    
    /** Sets the value of the 'URL' field */
    public sparqles.avro.discovery.QueryInfo.Builder setURL(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.URL = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'URL' field has been set */
    public boolean hasURL() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'URL' field */
    public sparqles.avro.discovery.QueryInfo.Builder clearURL() {
      URL = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'Exception' field */
    public java.lang.CharSequence getException() {
      return Exception;
    }
    
    /** Sets the value of the 'Exception' field */
    public sparqles.avro.discovery.QueryInfo.Builder setException(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Exception = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'Exception' field has been set */
    public boolean hasException() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'Exception' field */
    public sparqles.avro.discovery.QueryInfo.Builder clearException() {
      Exception = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'Results' field */
    public java.lang.CharSequence getResults() {
      return Results;
    }
    
    /** Sets the value of the 'Results' field */
    public sparqles.avro.discovery.QueryInfo.Builder setResults(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Results = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'Results' field has been set */
    public boolean hasResults() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'Results' field */
    public sparqles.avro.discovery.QueryInfo.Builder clearResults() {
      Results = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'descriptionFiles' field */
    public java.util.List<java.lang.CharSequence> getDescriptionFiles() {
      return descriptionFiles;
    }
    
    /** Sets the value of the 'descriptionFiles' field */
    public sparqles.avro.discovery.QueryInfo.Builder setDescriptionFiles(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.descriptionFiles = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'descriptionFiles' field has been set */
    public boolean hasDescriptionFiles() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'descriptionFiles' field */
    public sparqles.avro.discovery.QueryInfo.Builder clearDescriptionFiles() {
      descriptionFiles = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public QueryInfo build() {
      try {
        QueryInfo record = new QueryInfo();
        record.URL = fieldSetFlags()[0] ? this.URL : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Exception = fieldSetFlags()[1] ? this.Exception : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Results = fieldSetFlags()[2] ? this.Results : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.descriptionFiles = fieldSetFlags()[3] ? this.descriptionFiles : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
