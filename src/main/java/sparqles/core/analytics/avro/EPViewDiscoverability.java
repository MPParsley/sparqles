/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sparqles.core.analytics.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EPViewDiscoverability extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EPViewDiscoverability\",\"namespace\":\"sparqles.core.analytics.avro\",\"fields\":[{\"name\":\"serverName\",\"type\":\"string\"},{\"name\":\"VoIDDescription\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EPViewDiscoverabilityData\",\"namespace\":\"sparqles.analytics.avro\",\"fields\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"boolean\"}]}}},{\"name\":\"SDDescription\",\"type\":{\"type\":\"array\",\"items\":\"sparqles.analytics.avro.EPViewDiscoverabilityData\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence serverName;
  @Deprecated public java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> VoIDDescription;
  @Deprecated public java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> SDDescription;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public EPViewDiscoverability() {}

  /**
   * All-args constructor.
   */
  public EPViewDiscoverability(java.lang.CharSequence serverName, java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> VoIDDescription, java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> SDDescription) {
    this.serverName = serverName;
    this.VoIDDescription = VoIDDescription;
    this.SDDescription = SDDescription;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return serverName;
    case 1: return VoIDDescription;
    case 2: return SDDescription;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: serverName = (java.lang.CharSequence)value$; break;
    case 1: VoIDDescription = (java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData>)value$; break;
    case 2: SDDescription = (java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'serverName' field.
   */
  public java.lang.CharSequence getServerName() {
    return serverName;
  }

  /**
   * Sets the value of the 'serverName' field.
   * @param value the value to set.
   */
  public void setServerName(java.lang.CharSequence value) {
    this.serverName = value;
  }

  /**
   * Gets the value of the 'VoIDDescription' field.
   */
  public java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> getVoIDDescription() {
    return VoIDDescription;
  }

  /**
   * Sets the value of the 'VoIDDescription' field.
   * @param value the value to set.
   */
  public void setVoIDDescription(java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> value) {
    this.VoIDDescription = value;
  }

  /**
   * Gets the value of the 'SDDescription' field.
   */
  public java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> getSDDescription() {
    return SDDescription;
  }

  /**
   * Sets the value of the 'SDDescription' field.
   * @param value the value to set.
   */
  public void setSDDescription(java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> value) {
    this.SDDescription = value;
  }

  /** Creates a new EPViewDiscoverability RecordBuilder */
  public static sparqles.core.analytics.avro.EPViewDiscoverability.Builder newBuilder() {
    return new sparqles.core.analytics.avro.EPViewDiscoverability.Builder();
  }
  
  /** Creates a new EPViewDiscoverability RecordBuilder by copying an existing Builder */
  public static sparqles.core.analytics.avro.EPViewDiscoverability.Builder newBuilder(sparqles.core.analytics.avro.EPViewDiscoverability.Builder other) {
    return new sparqles.core.analytics.avro.EPViewDiscoverability.Builder(other);
  }
  
  /** Creates a new EPViewDiscoverability RecordBuilder by copying an existing EPViewDiscoverability instance */
  public static sparqles.core.analytics.avro.EPViewDiscoverability.Builder newBuilder(sparqles.core.analytics.avro.EPViewDiscoverability other) {
    return new sparqles.core.analytics.avro.EPViewDiscoverability.Builder(other);
  }
  
  /**
   * RecordBuilder for EPViewDiscoverability instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EPViewDiscoverability>
    implements org.apache.avro.data.RecordBuilder<EPViewDiscoverability> {

    private java.lang.CharSequence serverName;
    private java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> VoIDDescription;
    private java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> SDDescription;

    /** Creates a new Builder */
    private Builder() {
      super(sparqles.core.analytics.avro.EPViewDiscoverability.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sparqles.core.analytics.avro.EPViewDiscoverability.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.serverName)) {
        this.serverName = data().deepCopy(fields()[0].schema(), other.serverName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VoIDDescription)) {
        this.VoIDDescription = data().deepCopy(fields()[1].schema(), other.VoIDDescription);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SDDescription)) {
        this.SDDescription = data().deepCopy(fields()[2].schema(), other.SDDescription);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EPViewDiscoverability instance */
    private Builder(sparqles.core.analytics.avro.EPViewDiscoverability other) {
            super(sparqles.core.analytics.avro.EPViewDiscoverability.SCHEMA$);
      if (isValidValue(fields()[0], other.serverName)) {
        this.serverName = data().deepCopy(fields()[0].schema(), other.serverName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VoIDDescription)) {
        this.VoIDDescription = data().deepCopy(fields()[1].schema(), other.VoIDDescription);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SDDescription)) {
        this.SDDescription = data().deepCopy(fields()[2].schema(), other.SDDescription);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'serverName' field */
    public java.lang.CharSequence getServerName() {
      return serverName;
    }
    
    /** Sets the value of the 'serverName' field */
    public sparqles.core.analytics.avro.EPViewDiscoverability.Builder setServerName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.serverName = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'serverName' field has been set */
    public boolean hasServerName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'serverName' field */
    public sparqles.core.analytics.avro.EPViewDiscoverability.Builder clearServerName() {
      serverName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'VoIDDescription' field */
    public java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> getVoIDDescription() {
      return VoIDDescription;
    }
    
    /** Sets the value of the 'VoIDDescription' field */
    public sparqles.core.analytics.avro.EPViewDiscoverability.Builder setVoIDDescription(java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> value) {
      validate(fields()[1], value);
      this.VoIDDescription = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'VoIDDescription' field has been set */
    public boolean hasVoIDDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'VoIDDescription' field */
    public sparqles.core.analytics.avro.EPViewDiscoverability.Builder clearVoIDDescription() {
      VoIDDescription = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'SDDescription' field */
    public java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> getSDDescription() {
      return SDDescription;
    }
    
    /** Sets the value of the 'SDDescription' field */
    public sparqles.core.analytics.avro.EPViewDiscoverability.Builder setSDDescription(java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData> value) {
      validate(fields()[2], value);
      this.SDDescription = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'SDDescription' field has been set */
    public boolean hasSDDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'SDDescription' field */
    public sparqles.core.analytics.avro.EPViewDiscoverability.Builder clearSDDescription() {
      SDDescription = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public EPViewDiscoverability build() {
      try {
        EPViewDiscoverability record = new EPViewDiscoverability();
        record.serverName = fieldSetFlags()[0] ? this.serverName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.VoIDDescription = fieldSetFlags()[1] ? this.VoIDDescription : (java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData>) defaultValue(fields()[1]);
        record.SDDescription = fieldSetFlags()[2] ? this.SDDescription : (java.util.List<sparqles.analytics.avro.EPViewDiscoverabilityData>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
