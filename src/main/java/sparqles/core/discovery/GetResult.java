/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sparqles.core.discovery;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GetResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GetResult\",\"namespace\":\"sparqles.core.discovery\",\"fields\":[{\"name\":\"ResponseType\",\"type\":\"string\"},{\"name\":\"ResponseCode\",\"type\":\"string\"},{\"name\":\"ResponseServer\",\"type\":\"string\"},{\"name\":\"ResponseLink\",\"type\":\"string\"},{\"name\":\"SPARQLDESCterms\",\"type\":\"long\"},{\"name\":\"Exception\",\"type\":[\"string\",\"null\"]},{\"name\":\"VOIDterms\",\"type\":\"long\"},{\"name\":\"SPARQLDESCpreds\",\"type\":{\"type\":\"map\",\"values\":[\"string\",\"long\"]}},{\"name\":\"voiDpreds\",\"type\":{\"type\":\"map\",\"values\":[\"string\",\"long\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence ResponseType;
  @Deprecated public java.lang.CharSequence ResponseCode;
  @Deprecated public java.lang.CharSequence ResponseServer;
  @Deprecated public java.lang.CharSequence ResponseLink;
  @Deprecated public long SPARQLDESCterms;
  @Deprecated public java.lang.CharSequence Exception;
  @Deprecated public long VOIDterms;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Object> SPARQLDESCpreds;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Object> voiDpreds;

  /**
   * Default constructor.
   */
  public GetResult() {}

  /**
   * All-args constructor.
   */
  public GetResult(java.lang.CharSequence ResponseType, java.lang.CharSequence ResponseCode, java.lang.CharSequence ResponseServer, java.lang.CharSequence ResponseLink, java.lang.Long SPARQLDESCterms, java.lang.CharSequence Exception, java.lang.Long VOIDterms, java.util.Map<java.lang.CharSequence,java.lang.Object> SPARQLDESCpreds, java.util.Map<java.lang.CharSequence,java.lang.Object> voiDpreds) {
    this.ResponseType = ResponseType;
    this.ResponseCode = ResponseCode;
    this.ResponseServer = ResponseServer;
    this.ResponseLink = ResponseLink;
    this.SPARQLDESCterms = SPARQLDESCterms;
    this.Exception = Exception;
    this.VOIDterms = VOIDterms;
    this.SPARQLDESCpreds = SPARQLDESCpreds;
    this.voiDpreds = voiDpreds;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ResponseType;
    case 1: return ResponseCode;
    case 2: return ResponseServer;
    case 3: return ResponseLink;
    case 4: return SPARQLDESCterms;
    case 5: return Exception;
    case 6: return VOIDterms;
    case 7: return SPARQLDESCpreds;
    case 8: return voiDpreds;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ResponseType = (java.lang.CharSequence)value$; break;
    case 1: ResponseCode = (java.lang.CharSequence)value$; break;
    case 2: ResponseServer = (java.lang.CharSequence)value$; break;
    case 3: ResponseLink = (java.lang.CharSequence)value$; break;
    case 4: SPARQLDESCterms = (java.lang.Long)value$; break;
    case 5: Exception = (java.lang.CharSequence)value$; break;
    case 6: VOIDterms = (java.lang.Long)value$; break;
    case 7: SPARQLDESCpreds = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    case 8: voiDpreds = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ResponseType' field.
   */
  public java.lang.CharSequence getResponseType() {
    return ResponseType;
  }

  /**
   * Sets the value of the 'ResponseType' field.
   * @param value the value to set.
   */
  public void setResponseType(java.lang.CharSequence value) {
    this.ResponseType = value;
  }

  /**
   * Gets the value of the 'ResponseCode' field.
   */
  public java.lang.CharSequence getResponseCode() {
    return ResponseCode;
  }

  /**
   * Sets the value of the 'ResponseCode' field.
   * @param value the value to set.
   */
  public void setResponseCode(java.lang.CharSequence value) {
    this.ResponseCode = value;
  }

  /**
   * Gets the value of the 'ResponseServer' field.
   */
  public java.lang.CharSequence getResponseServer() {
    return ResponseServer;
  }

  /**
   * Sets the value of the 'ResponseServer' field.
   * @param value the value to set.
   */
  public void setResponseServer(java.lang.CharSequence value) {
    this.ResponseServer = value;
  }

  /**
   * Gets the value of the 'ResponseLink' field.
   */
  public java.lang.CharSequence getResponseLink() {
    return ResponseLink;
  }

  /**
   * Sets the value of the 'ResponseLink' field.
   * @param value the value to set.
   */
  public void setResponseLink(java.lang.CharSequence value) {
    this.ResponseLink = value;
  }

  /**
   * Gets the value of the 'SPARQLDESCterms' field.
   */
  public java.lang.Long getSPARQLDESCterms() {
    return SPARQLDESCterms;
  }

  /**
   * Sets the value of the 'SPARQLDESCterms' field.
   * @param value the value to set.
   */
  public void setSPARQLDESCterms(java.lang.Long value) {
    this.SPARQLDESCterms = value;
  }

  /**
   * Gets the value of the 'Exception' field.
   */
  public java.lang.CharSequence getException() {
    return Exception;
  }

  /**
   * Sets the value of the 'Exception' field.
   * @param value the value to set.
   */
  public void setException(java.lang.CharSequence value) {
    this.Exception = value;
  }

  /**
   * Gets the value of the 'VOIDterms' field.
   */
  public java.lang.Long getVOIDterms() {
    return VOIDterms;
  }

  /**
   * Sets the value of the 'VOIDterms' field.
   * @param value the value to set.
   */
  public void setVOIDterms(java.lang.Long value) {
    this.VOIDterms = value;
  }

  /**
   * Gets the value of the 'SPARQLDESCpreds' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getSPARQLDESCpreds() {
    return SPARQLDESCpreds;
  }

  /**
   * Sets the value of the 'SPARQLDESCpreds' field.
   * @param value the value to set.
   */
  public void setSPARQLDESCpreds(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.SPARQLDESCpreds = value;
  }

  /**
   * Gets the value of the 'voiDpreds' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getVoiDpreds() {
    return voiDpreds;
  }

  /**
   * Sets the value of the 'voiDpreds' field.
   * @param value the value to set.
   */
  public void setVoiDpreds(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.voiDpreds = value;
  }

  /** Creates a new GetResult RecordBuilder */
  public static sparqles.core.discovery.GetResult.Builder newBuilder() {
    return new sparqles.core.discovery.GetResult.Builder();
  }
  
  /** Creates a new GetResult RecordBuilder by copying an existing Builder */
  public static sparqles.core.discovery.GetResult.Builder newBuilder(sparqles.core.discovery.GetResult.Builder other) {
    return new sparqles.core.discovery.GetResult.Builder(other);
  }
  
  /** Creates a new GetResult RecordBuilder by copying an existing GetResult instance */
  public static sparqles.core.discovery.GetResult.Builder newBuilder(sparqles.core.discovery.GetResult other) {
    return new sparqles.core.discovery.GetResult.Builder(other);
  }
  
  /**
   * RecordBuilder for GetResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GetResult>
    implements org.apache.avro.data.RecordBuilder<GetResult> {

    private java.lang.CharSequence ResponseType;
    private java.lang.CharSequence ResponseCode;
    private java.lang.CharSequence ResponseServer;
    private java.lang.CharSequence ResponseLink;
    private long SPARQLDESCterms;
    private java.lang.CharSequence Exception;
    private long VOIDterms;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> SPARQLDESCpreds;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> voiDpreds;

    /** Creates a new Builder */
    private Builder() {
      super(sparqles.core.discovery.GetResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sparqles.core.discovery.GetResult.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing GetResult instance */
    private Builder(sparqles.core.discovery.GetResult other) {
            super(sparqles.core.discovery.GetResult.SCHEMA$);
      if (isValidValue(fields()[0], other.ResponseType)) {
        this.ResponseType = data().deepCopy(fields()[0].schema(), other.ResponseType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ResponseCode)) {
        this.ResponseCode = data().deepCopy(fields()[1].schema(), other.ResponseCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ResponseServer)) {
        this.ResponseServer = data().deepCopy(fields()[2].schema(), other.ResponseServer);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ResponseLink)) {
        this.ResponseLink = data().deepCopy(fields()[3].schema(), other.ResponseLink);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.SPARQLDESCterms)) {
        this.SPARQLDESCterms = data().deepCopy(fields()[4].schema(), other.SPARQLDESCterms);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Exception)) {
        this.Exception = data().deepCopy(fields()[5].schema(), other.Exception);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.VOIDterms)) {
        this.VOIDterms = data().deepCopy(fields()[6].schema(), other.VOIDterms);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.SPARQLDESCpreds)) {
        this.SPARQLDESCpreds = data().deepCopy(fields()[7].schema(), other.SPARQLDESCpreds);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.voiDpreds)) {
        this.voiDpreds = data().deepCopy(fields()[8].schema(), other.voiDpreds);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'ResponseType' field */
    public java.lang.CharSequence getResponseType() {
      return ResponseType;
    }
    
    /** Sets the value of the 'ResponseType' field */
    public sparqles.core.discovery.GetResult.Builder setResponseType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ResponseType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ResponseType' field has been set */
    public boolean hasResponseType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ResponseType' field */
    public sparqles.core.discovery.GetResult.Builder clearResponseType() {
      ResponseType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'ResponseCode' field */
    public java.lang.CharSequence getResponseCode() {
      return ResponseCode;
    }
    
    /** Sets the value of the 'ResponseCode' field */
    public sparqles.core.discovery.GetResult.Builder setResponseCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.ResponseCode = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'ResponseCode' field has been set */
    public boolean hasResponseCode() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'ResponseCode' field */
    public sparqles.core.discovery.GetResult.Builder clearResponseCode() {
      ResponseCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ResponseServer' field */
    public java.lang.CharSequence getResponseServer() {
      return ResponseServer;
    }
    
    /** Sets the value of the 'ResponseServer' field */
    public sparqles.core.discovery.GetResult.Builder setResponseServer(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ResponseServer = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ResponseServer' field has been set */
    public boolean hasResponseServer() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ResponseServer' field */
    public sparqles.core.discovery.GetResult.Builder clearResponseServer() {
      ResponseServer = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'ResponseLink' field */
    public java.lang.CharSequence getResponseLink() {
      return ResponseLink;
    }
    
    /** Sets the value of the 'ResponseLink' field */
    public sparqles.core.discovery.GetResult.Builder setResponseLink(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.ResponseLink = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'ResponseLink' field has been set */
    public boolean hasResponseLink() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'ResponseLink' field */
    public sparqles.core.discovery.GetResult.Builder clearResponseLink() {
      ResponseLink = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'SPARQLDESCterms' field */
    public java.lang.Long getSPARQLDESCterms() {
      return SPARQLDESCterms;
    }
    
    /** Sets the value of the 'SPARQLDESCterms' field */
    public sparqles.core.discovery.GetResult.Builder setSPARQLDESCterms(long value) {
      validate(fields()[4], value);
      this.SPARQLDESCterms = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'SPARQLDESCterms' field has been set */
    public boolean hasSPARQLDESCterms() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'SPARQLDESCterms' field */
    public sparqles.core.discovery.GetResult.Builder clearSPARQLDESCterms() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'Exception' field */
    public java.lang.CharSequence getException() {
      return Exception;
    }
    
    /** Sets the value of the 'Exception' field */
    public sparqles.core.discovery.GetResult.Builder setException(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.Exception = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'Exception' field has been set */
    public boolean hasException() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'Exception' field */
    public sparqles.core.discovery.GetResult.Builder clearException() {
      Exception = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'VOIDterms' field */
    public java.lang.Long getVOIDterms() {
      return VOIDterms;
    }
    
    /** Sets the value of the 'VOIDterms' field */
    public sparqles.core.discovery.GetResult.Builder setVOIDterms(long value) {
      validate(fields()[6], value);
      this.VOIDterms = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'VOIDterms' field has been set */
    public boolean hasVOIDterms() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'VOIDterms' field */
    public sparqles.core.discovery.GetResult.Builder clearVOIDterms() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'SPARQLDESCpreds' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getSPARQLDESCpreds() {
      return SPARQLDESCpreds;
    }
    
    /** Sets the value of the 'SPARQLDESCpreds' field */
    public sparqles.core.discovery.GetResult.Builder setSPARQLDESCpreds(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[7], value);
      this.SPARQLDESCpreds = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'SPARQLDESCpreds' field has been set */
    public boolean hasSPARQLDESCpreds() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'SPARQLDESCpreds' field */
    public sparqles.core.discovery.GetResult.Builder clearSPARQLDESCpreds() {
      SPARQLDESCpreds = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'voiDpreds' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getVoiDpreds() {
      return voiDpreds;
    }
    
    /** Sets the value of the 'voiDpreds' field */
    public sparqles.core.discovery.GetResult.Builder setVoiDpreds(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[8], value);
      this.voiDpreds = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'voiDpreds' field has been set */
    public boolean hasVoiDpreds() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'voiDpreds' field */
    public sparqles.core.discovery.GetResult.Builder clearVoiDpreds() {
      voiDpreds = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    public GetResult build() {
      try {
        GetResult record = new GetResult();
        record.ResponseType = fieldSetFlags()[0] ? this.ResponseType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.ResponseCode = fieldSetFlags()[1] ? this.ResponseCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ResponseServer = fieldSetFlags()[2] ? this.ResponseServer : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.ResponseLink = fieldSetFlags()[3] ? this.ResponseLink : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.SPARQLDESCterms = fieldSetFlags()[4] ? this.SPARQLDESCterms : (java.lang.Long) defaultValue(fields()[4]);
        record.Exception = fieldSetFlags()[5] ? this.Exception : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.VOIDterms = fieldSetFlags()[6] ? this.VOIDterms : (java.lang.Long) defaultValue(fields()[6]);
        record.SPARQLDESCpreds = fieldSetFlags()[7] ? this.SPARQLDESCpreds : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[7]);
        record.voiDpreds = fieldSetFlags()[8] ? this.voiDpreds : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
