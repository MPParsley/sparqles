/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sparqles.core.discovery;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DResult\",\"namespace\":\"sparqles.core.discovery\",\"fields\":[{\"name\":\"endpointResult\",\"type\":{\"type\":\"record\",\"name\":\"EndpointResult\",\"namespace\":\"sparqles.core\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"end\",\"type\":\"long\"}],\"import\":\"Endpoint.avsc\"}},{\"name\":\"GetResult\",\"type\":{\"type\":\"record\",\"name\":\"GetResult\",\"fields\":[{\"name\":\"ResponseType\",\"type\":\"string\"},{\"name\":\"ResponseCode\",\"type\":\"string\"},{\"name\":\"ResponseServer\",\"type\":\"string\"},{\"name\":\"ResponseLink\",\"type\":\"string\"},{\"name\":\"SPARQLDESCterms\",\"type\":\"int\"},{\"name\":\"Exception\",\"type\":[\"string\",\"null\"]},{\"name\":\"VOIDterms\",\"type\":\"int\"},{\"name\":\"SPARQLDESCpreds\",\"type\":{\"type\":\"map\",\"values\":[\"int\"]}},{\"name\":\"voiDpreds\",\"type\":{\"type\":\"map\",\"values\":[\"int\"]}}]}},{\"name\":\"VoidResult\",\"type\":{\"type\":\"record\",\"name\":\"VoidResult\",\"fields\":[{\"name\":\"voidFile\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"Exception\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"VoidStoreResult\",\"type\":\"VoidResult\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public sparqles.core.EndpointResult endpointResult;
  @Deprecated public sparqles.core.discovery.GetResult GetResult;
  @Deprecated public sparqles.core.discovery.VoidResult VoidResult;
  @Deprecated public sparqles.core.discovery.VoidResult VoidStoreResult;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public DResult() {}

  /**
   * All-args constructor.
   */
  public DResult(sparqles.core.EndpointResult endpointResult, sparqles.core.discovery.GetResult GetResult, sparqles.core.discovery.VoidResult VoidResult, sparqles.core.discovery.VoidResult VoidStoreResult) {
    this.endpointResult = endpointResult;
    this.GetResult = GetResult;
    this.VoidResult = VoidResult;
    this.VoidStoreResult = VoidStoreResult;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return endpointResult;
    case 1: return GetResult;
    case 2: return VoidResult;
    case 3: return VoidStoreResult;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: endpointResult = (sparqles.core.EndpointResult)value$; break;
    case 1: GetResult = (sparqles.core.discovery.GetResult)value$; break;
    case 2: VoidResult = (sparqles.core.discovery.VoidResult)value$; break;
    case 3: VoidStoreResult = (sparqles.core.discovery.VoidResult)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'endpointResult' field.
   */
  public sparqles.core.EndpointResult getEndpointResult() {
    return endpointResult;
  }

  /**
   * Sets the value of the 'endpointResult' field.
   * @param value the value to set.
   */
  public void setEndpointResult(sparqles.core.EndpointResult value) {
    this.endpointResult = value;
  }

  /**
   * Gets the value of the 'GetResult' field.
   */
  public sparqles.core.discovery.GetResult getGetResult() {
    return GetResult;
  }

  /**
   * Sets the value of the 'GetResult' field.
   * @param value the value to set.
   */
  public void setGetResult(sparqles.core.discovery.GetResult value) {
    this.GetResult = value;
  }

  /**
   * Gets the value of the 'VoidResult' field.
   */
  public sparqles.core.discovery.VoidResult getVoidResult() {
    return VoidResult;
  }

  /**
   * Sets the value of the 'VoidResult' field.
   * @param value the value to set.
   */
  public void setVoidResult(sparqles.core.discovery.VoidResult value) {
    this.VoidResult = value;
  }

  /**
   * Gets the value of the 'VoidStoreResult' field.
   */
  public sparqles.core.discovery.VoidResult getVoidStoreResult() {
    return VoidStoreResult;
  }

  /**
   * Sets the value of the 'VoidStoreResult' field.
   * @param value the value to set.
   */
  public void setVoidStoreResult(sparqles.core.discovery.VoidResult value) {
    this.VoidStoreResult = value;
  }

  /** Creates a new DResult RecordBuilder */
  public static sparqles.core.discovery.DResult.Builder newBuilder() {
    return new sparqles.core.discovery.DResult.Builder();
  }
  
  /** Creates a new DResult RecordBuilder by copying an existing Builder */
  public static sparqles.core.discovery.DResult.Builder newBuilder(sparqles.core.discovery.DResult.Builder other) {
    return new sparqles.core.discovery.DResult.Builder(other);
  }
  
  /** Creates a new DResult RecordBuilder by copying an existing DResult instance */
  public static sparqles.core.discovery.DResult.Builder newBuilder(sparqles.core.discovery.DResult other) {
    return new sparqles.core.discovery.DResult.Builder(other);
  }
  
  /**
   * RecordBuilder for DResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DResult>
    implements org.apache.avro.data.RecordBuilder<DResult> {

    private sparqles.core.EndpointResult endpointResult;
    private sparqles.core.discovery.GetResult GetResult;
    private sparqles.core.discovery.VoidResult VoidResult;
    private sparqles.core.discovery.VoidResult VoidStoreResult;

    /** Creates a new Builder */
    private Builder() {
      super(sparqles.core.discovery.DResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sparqles.core.discovery.DResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.endpointResult)) {
        this.endpointResult = data().deepCopy(fields()[0].schema(), other.endpointResult);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.GetResult)) {
        this.GetResult = data().deepCopy(fields()[1].schema(), other.GetResult);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.VoidResult)) {
        this.VoidResult = data().deepCopy(fields()[2].schema(), other.VoidResult);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.VoidStoreResult)) {
        this.VoidStoreResult = data().deepCopy(fields()[3].schema(), other.VoidStoreResult);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DResult instance */
    private Builder(sparqles.core.discovery.DResult other) {
            super(sparqles.core.discovery.DResult.SCHEMA$);
      if (isValidValue(fields()[0], other.endpointResult)) {
        this.endpointResult = data().deepCopy(fields()[0].schema(), other.endpointResult);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.GetResult)) {
        this.GetResult = data().deepCopy(fields()[1].schema(), other.GetResult);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.VoidResult)) {
        this.VoidResult = data().deepCopy(fields()[2].schema(), other.VoidResult);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.VoidStoreResult)) {
        this.VoidStoreResult = data().deepCopy(fields()[3].schema(), other.VoidStoreResult);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'endpointResult' field */
    public sparqles.core.EndpointResult getEndpointResult() {
      return endpointResult;
    }
    
    /** Sets the value of the 'endpointResult' field */
    public sparqles.core.discovery.DResult.Builder setEndpointResult(sparqles.core.EndpointResult value) {
      validate(fields()[0], value);
      this.endpointResult = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'endpointResult' field has been set */
    public boolean hasEndpointResult() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'endpointResult' field */
    public sparqles.core.discovery.DResult.Builder clearEndpointResult() {
      endpointResult = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'GetResult' field */
    public sparqles.core.discovery.GetResult getGetResult() {
      return GetResult;
    }
    
    /** Sets the value of the 'GetResult' field */
    public sparqles.core.discovery.DResult.Builder setGetResult(sparqles.core.discovery.GetResult value) {
      validate(fields()[1], value);
      this.GetResult = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'GetResult' field has been set */
    public boolean hasGetResult() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'GetResult' field */
    public sparqles.core.discovery.DResult.Builder clearGetResult() {
      GetResult = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'VoidResult' field */
    public sparqles.core.discovery.VoidResult getVoidResult() {
      return VoidResult;
    }
    
    /** Sets the value of the 'VoidResult' field */
    public sparqles.core.discovery.DResult.Builder setVoidResult(sparqles.core.discovery.VoidResult value) {
      validate(fields()[2], value);
      this.VoidResult = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'VoidResult' field has been set */
    public boolean hasVoidResult() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'VoidResult' field */
    public sparqles.core.discovery.DResult.Builder clearVoidResult() {
      VoidResult = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'VoidStoreResult' field */
    public sparqles.core.discovery.VoidResult getVoidStoreResult() {
      return VoidStoreResult;
    }
    
    /** Sets the value of the 'VoidStoreResult' field */
    public sparqles.core.discovery.DResult.Builder setVoidStoreResult(sparqles.core.discovery.VoidResult value) {
      validate(fields()[3], value);
      this.VoidStoreResult = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'VoidStoreResult' field has been set */
    public boolean hasVoidStoreResult() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'VoidStoreResult' field */
    public sparqles.core.discovery.DResult.Builder clearVoidStoreResult() {
      VoidStoreResult = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public DResult build() {
      try {
        DResult record = new DResult();
        record.endpointResult = fieldSetFlags()[0] ? this.endpointResult : (sparqles.core.EndpointResult) defaultValue(fields()[0]);
        record.GetResult = fieldSetFlags()[1] ? this.GetResult : (sparqles.core.discovery.GetResult) defaultValue(fields()[1]);
        record.VoidResult = fieldSetFlags()[2] ? this.VoidResult : (sparqles.core.discovery.VoidResult) defaultValue(fields()[2]);
        record.VoidStoreResult = fieldSetFlags()[3] ? this.VoidStoreResult : (sparqles.core.discovery.VoidResult) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
